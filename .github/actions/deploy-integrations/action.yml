name: Deploy Integrations
description: Deploys integrations

input:
  environment:
    type: choice
    description: 'Environment to deploy to'
    required: true
    options:
      - staging
      - production
  sentry_auth_token:
    description: 'Sentry auth token'
    required: true
  token_cloud_ops_account:
    description: 'Cloud Ops account token'
    required: true
  cloud_ops_workspace_id:
    description: 'Cloud Ops workspace id'
    required: true
  gmail_client_id:
    description: 'Gmail client id'
    required: true
  gmail_client_secret:
    description: 'Gmail client secret'
    required: true
  gmail_topic_name:
    description: 'Gmail topic name'
    required: true
  linear_client_id:
    description: 'Linear client id'
    required: true
  linear_client_secret:
    description: 'Linear client secret'
    required: true
  linear_webhook_signing_secret:
    description: 'Linear webhook signing secret'
    required: true
  slack_client_id:
    description: 'Slack client id'
    required: true
  slack_client_secret:
    description: 'Slack client secret'
    required: true

runs:
  using: 'composite'
  steps:
    - name: List Sentry Integrations
      id: list_sentry_integrations
      shell: bash
      run: |
        script_path="./.github/scripts/ls-sentry-integrations.sh"
        chmod +x $script_path
        filter=$($script_path)
        echo "::set-output name=filter::$filter"
    - name: Inject SourceMaps
      shell: bash
      run: pnpm -r --stream ${{ steps.list_sentry_integrations.outputs.filter }} exec sentry-cli sourcemaps inject .botpress/dist
    - name: Upload SourceMaps
      shell: bash
      run: pnpm -r --stream ${{ steps.list_sentry_integrations.outputs.filter }} exec sentry-cli sourcemaps upload --release=${{ github.sha }} --url-prefix '~' .botpress/dist
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentry_auth_token }}
        SENTRY_ORG: botpress-rm
        SENTRY_RELEASE: ${{ github.sha }}
    - name: Deploys Integrations
      env:
        ENVIRONMENT: ${{ inputs.environment }}
        TOKEN_CLOUD_OPS_ACCOUNT: ${{ inputs.token_cloud_ops_account }}
        CLOUD_OPS_WORKSPACE_ID: ${{ inputs.cloud_ops_workspace_id }}
        SENTRY_RELEASE: ${{ github.sha }}
        SENTRY_ENVIRONMENT: ${{ inputs.environment }}
      shell: bash
      run: |
        api_url="${{ inputs.environment == 'staging' && 'https://api.botpress.dev' || 'https://api.botpress.cloud' }}"

        # login

        echo "### Logging in to $api_url ###"
        pnpm bp login -y --api-url $api_url --workspaceId "$CLOUD_OPS_WORKSPACE_ID" --token "$TOKEN_CLOUD_OPS_ACCOUNT"

        # deploy

        echo "### Deploying integration @botpresshub/discord ###"
        pnpm -r --stream -F @botpresshub/discord -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/github ###"
        pnpm -r --stream -F @botpresshub/github -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/gmail ###"
        pnpm -r --stream -F @botpresshub/gmail -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"' --secrets CLIENT_ID="${{ inputs.gmail_client_id }}" --secrets CLIENT_SECRET="${{ inputs.gmail_client_secret }}" --secrets TOPIC_NAME="${{ inputs.gmail_topic_name }}"
        echo "### Deploying integration @botpresshub/gsheets ###"
        pnpm -r --stream -F @botpresshub/gsheets -c exec -- 'bp deploy -v -y --noBuild'
        echo "### Deploying integration @botpresshub/instagram ###"
        pnpm -r --stream -F @botpresshub/instagram -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/intercom ###"
        pnpm -r --stream -F @botpresshub/intercom -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/line ###"
        pnpm -r --stream -F @botpresshub/line -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/linear ###"
        pnpm -r --stream -F @botpresshub/linear -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"' --secrets CLIENT_ID="${{ inputs.linear_client_id }}" --secrets CLIENT_SECRET="${{ inputs.linear_client_secret }}" --secrets WEBHOOK_SIGNING_SECRET="${{ inputs.linear_webhook_signing_secret }}"
        echo "### Deploying integration @botpresshub/messenger ###"
        pnpm -r --stream -F @botpresshub/messenger -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/notion ###"
        pnpm -r --stream -F @botpresshub/notion -c exec -- 'bp deploy -v -y --noBuild'
        echo "### Deploying integration @botpresshub/slack ###"
        pnpm -r --stream -F @botpresshub/slack -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE" --secrets CLIENT_ID="${{ inputs.slack_client_id }}" --secrets CLIENT_SECRET="${{ inputs.slack_client_secret }}"'
        echo "### Deploying integration @botpresshub/sunco ###"
        pnpm -r --stream -F @botpresshub/sunco -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/teams ###"
        pnpm -r --stream -F @botpresshub/teams -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/telegram ###"
        pnpm -r --stream -F @botpresshub/telegram -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/twilio ###"
        pnpm -r --stream -F @botpresshub/twilio -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/viber ###"
        pnpm -r --stream -F @botpresshub/viber -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/vonage ###"
        pnpm -r --stream -F @botpresshub/vonage -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/webchat ###"
        pnpm -r --stream -F @botpresshub/webchat -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/webhook ###"
        pnpm -r --stream -F @botpresshub/webhook -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/whatsapp ###"
        pnpm -r --stream -F @botpresshub/whatsapp -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/zapier ###"
        pnpm -r --stream -F @botpresshub/zapier -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
        echo "### Deploying integration @botpresshub/zendesk ###"
        pnpm -r --stream -F @botpresshub/zendesk -c exec -- 'dsn=$(cat .sentryclirc | grep dsn | sed "s/dsn=//"); bp deploy -v -y --noBuild --secrets SENTRY_DSN="$dsn" --secrets SENTRY_ENVIRONMENT="$SENTRY_ENVIRONMENT" --secrets SENTRY_RELEASE="$SENTRY_RELEASE"'
